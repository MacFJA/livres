# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $suggestionIndexName: '%redisearch.suggestion%'
            $searchIndexName: '%redisearch.index%'
            array $completionsType: '%completions.type%'
            $providers: !tagged_iterator app.provider
            string $coverDir: '%app.cover_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    _instanceof:
        # services whose classes are instances of CustomInterface will be tagged automatically
        MacFJA\BookRetriever\ProviderInterface:
            configurator: ['@MacFJA\BookRetriever\ProviderConfigurator', 'configure']
            tags: ['app.provider']
    MacFJA\BookRetriever\:
        resource: '../vendor/macfja/book-retriever/lib/'
    MacFJA\BookRetriever\Pool:
        arguments:
            $providers: !tagged_iterator app.provider
    MacFJA\BookRetriever\ProviderConfigurationInterface: '@App\Repository\ProviderConfigurationRepository'

    Isbn\Isbn: ~

    Ehann\RedisRaw\RedisRawClientInterface:
        factory: ['App\Worker\Search\Factory', 'createRedisClient']
        arguments:
            $dsn: '%redisearch.url%'

    Ehann\RediSearch\Suggestion:
        arguments:
            $indexName: '%redisearch.suggestion%'
    Ehann\RediSearch\Index:
        arguments:
            $indexName: '%redisearch.index%'

    App\Doctrine\BookInjectionListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postLoad, entity: 'App\Entity\Book' }
    App\Doctrine\BookSearchIndexListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postRemove, entity: 'App\Entity\Book' }
            - { name: doctrine.orm.entity_listener, event: postUpdate, entity: 'App\Entity\Book' }
            - { name: doctrine.orm.entity_listener, event: postPersist, entity: 'App\Entity\Book' }

    Flintstone\Flintstone:
        arguments:
            $database: settings
            $config:
                dir: "%app.config_dir%"
